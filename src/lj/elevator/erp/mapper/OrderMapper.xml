<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lj.elevator.erp.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="lj.elevator.erp.pojo.Order" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="CREATETIME" property="createtime" jdbcType="DATE" />
    <result column="CHECKTIME" property="checktime" jdbcType="DATE" />
    <result column="STARTTIME" property="starttime" jdbcType="DATE" />
    <result column="ENDTIME" property="endtime" jdbcType="DATE" />
    <result column="TYPE" property="type" jdbcType="CHAR" />
    <result column="CREATER" property="creater" jdbcType="VARCHAR" />
    <result column="CHECKER" property="checker" jdbcType="VARCHAR" />
    <result column="STARTER" property="starter" jdbcType="VARCHAR" />
    <result column="TOTALPRICE" property="totalprice" jdbcType="DECIMAL" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="SUPPLIERID" property="supplierid" jdbcType="INTEGER" />
    <result column="CUSTOMERID" property="customerid" jdbcType="INTEGER" />
    
    <association property="supplier" javaType="lj.elevator.erp.pojo.Supplier">
    	<id column="SUPPLIERID" property="id" jdbcType="INTEGER" />
    	<result column="SNAME" property="name" jdbcType="VARCHAR" />
    	<result column="SCONTACT" property="contact" jdbcType="VARCHAR" />
    	<result column="STELE" property="tele" jdbcType="VARCHAR" />
    	<result column="SADDRESS" property="address" jdbcType="VARCHAR" />
    </association>    
    
    
    <association property="customer" javaType="lj.elevator.erp.pojo.Customer">
    	<id column="CUSTOMERID" property="id" jdbcType="INTEGER" />
    	<result column="CNAME" property="name" jdbcType="VARCHAR" />
    	<result column="CCONTACT" property="contact" jdbcType="VARCHAR" />
    	<result column="CTELE" property="tele" jdbcType="VARCHAR" />
    	<result column="CADDRESS" property="address" jdbcType="VARCHAR" />
    </association>  
    
    
    
  </resultMap>
  
  
  
  
  
  
  <select id="selectSameGoodsNum"   resultType="int">
  
  

  SELECT

  SUM(NUM)
FROM `order` o
LEFT JOIN `orderdetail` od
ON  o.`ID` = od.`ORDERID`
WHERE o.`STATE` =  1 AND o.`TYPE` = 2 
GROUP BY od.`GOODSID` 
  
  </select>
  
  <select id="selectSameGoodsId"   resultType="int">
  
  

  SELECT

  od.`GOODSID` 
FROM `order` o
LEFT JOIN `orderdetail` od
ON  o.`ID` = od.`ORDERID`
WHERE o.`STATE` =  1 AND o.`TYPE` = 2 
GROUP BY od.`GOODSID` 
  
  </select>
  
  
   
  
  <select id="selectByUtil"  parameterType="lj.elevator.erp.utils.ConditionUtil"  resultMap="BaseResultMap">
  
  
  
SELECT
  o.`ID`,
  o.`CREATETIME`,
  o.`CHECKTIME`,
  o.`STARTTIME`,
  o.`ENDTIME`,
  o.`TYPE`,
  o.`CREATER`,
  o.`CHECKER`,
  o.`STARTER`,
  o.`TOTALPRICE`,
  o.`STATE`,
  o.`SUPPLIERID`,
  o.`CUSTOMERID`,
  
  s.`NAME` SNAME,
  s.`CONTACT` SCONTACT,
  s.`TELE` STELE,
  s.`ADDRESS` SADDRESS,
  
  c.`NAME` CNAME,
  c.`CONTACT` CCONTACT,
  c.`TELE` CTELE,
  c.`ADDRESS` CADDRESS
  
FROM `order`  o
LEFT JOIN `supplier` s
ON o.`SUPPLIERID` = s.id 
LEFT JOIN `customer` c
ON o.`CUSTOMERID` = c.id
<where>
	<if test="conditionS.size() != 0" >
	
		<if test="conditionS[0] != null">
			AND o.`TYPE` = #{conditionS[0]} 
		
		</if>
		
		<if test="conditionS[1] != null">
			AND o.`STATE` = #{conditionS[1]}  
		
		</if>
		
		<if test="conditionS[2] != null">
			AND s.`NAME` LIKE '%${conditionS[2]}%' 
		
		</if>
		
		<if test="conditionS[3] != null">
			AND c.`NAME` LIKE '%${conditionS[3]}%'  
		
		</if>

		<if test="conditionS[4] != null">
			AND o.`CREATER` LIKE '%${conditionS[4]}%'  
		
		</if>
		
		
		<if test="conditionS[5] != null">
			AND o.`CHECKER` LIKE '%${conditionS[5]}%'    
		
		</if>
		
		<if test="conditionS[6] != null">
			AND o.`STARTER` LIKE '%${conditionS[6]}%'    
		
		</if>
		
		<if test="conditionS[7] != null">
			AND o.`CREATETIME` &gt;= #{conditionS[7]} 
		
		</if>
		
		<if test="conditionS[8] != null">
			AND o.`ENDTIME` &lt;= #{conditionS[8]} 
		
		</if>

	</if>	
</where>
order by `STATE`  
LIMIT #{start},#{size}  
  
  
  </select>
  
  
  
  
<select id="countByUtil" parameterType="list" resultType="int">
  SELECT
  count(*) NUM
FROM `order`  o
LEFT JOIN `supplier` s
ON o.`SUPPLIERID` = s.id 
LEFT JOIN `customer` c
ON o.`CUSTOMERID` = c.id
<where>
	<if test="list.size() != 0" >
		<if test="list.get(0) != null">
			AND o.`TYPE` LIKE '%${list.get(0)}%'
			
		</if>
		
		<if test="list.get(1) != null">
			AND o.`STATE` like '%${list.get(1)}%' 
		
		</if>
		
		
		
		<if test="list.get(2) != null">
			AND s.`NAME` LIKE '%${list.get(2)}%'
			
		</if>
		
		<if test="list.get(3) != null">
			AND c.`NAME` like '%${list.get(3)}%' 
		
		</if>
		
		<if test="list.get(4) != null">
			AND o.`CREATER` like '%${list.get(4)}%' 
		
		</if>


		<if test="list.get(5) != null">
			AND o.`CHECKER` like '%${list.get(5)}%' 
		
		</if>
		
		<if test="list.get(6) != null">
			AND o.`STARTER` like '%${list.get(6)}%' 
		
		</if>
			
		<if test="list.get(7) != null">
			AND o.`CREATETIME` &gt;= '${list.get(7)}' 
		
		</if>
		
		<if test="list.get(8) != null">
			AND o.`ENDTIME` &lt;= '${list.get(8)}' 
		
		</if>	
	</if>	
</where>
</select>  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, CREATETIME, CHECKTIME, STARTTIME, ENDTIME, `TYPE`, CREATER, CHECKER, STARTER, TOTALPRICE, 
    STATE, SUPPLIERID, CUSTOMERID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="lj.elevator.erp.pojo.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from `order`
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from `order`
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="lj.elevator.erp.pojo.OrderExample" >
    delete from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="lj.elevator.erp.pojo.Order" >
    insert into `order` (ID, CREATETIME, CHECKTIME, 
      STARTTIME, ENDTIME, `TYPE`, CREATER, 
      CHECKER, STARTER, TOTALPRICE, 
      STATE, SUPPLIERID, CUSTOMERID
      )
    values (#{id,jdbcType=INTEGER}, #{createtime,jdbcType=DATE}, #{checktime,jdbcType=DATE}, 
      #{starttime,jdbcType=DATE}, #{endtime,jdbcType=DATE}, #{type,jdbcType=CHAR}, #{creater,jdbcType=VARCHAR}, 
      #{checker,jdbcType=VARCHAR}, #{starter,jdbcType=VARCHAR}, #{totalprice,jdbcType=DECIMAL}, 
      #{state,jdbcType=VARCHAR}, #{supplierid,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="lj.elevator.erp.pojo.Order" useGeneratedKeys="true" keyProperty="id">
  

  
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="createtime != null" >
        CREATETIME,
      </if>
      <if test="checktime != null" >
        CHECKTIME,
      </if>
      <if test="starttime != null" >
        STARTTIME,
      </if>
      <if test="endtime != null" >
        ENDTIME,
      </if>
      <if test="type != null" >
        `TYPE`,
      </if>
      <if test="creater != null" >
        CREATER,
      </if>
      <if test="checker != null" >
        CHECKER,
      </if>
      <if test="starter != null" >
        STARTER,
      </if>
      <if test="totalprice != null" >
        TOTALPRICE,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="supplierid != null" >
        SUPPLIERID,
      </if>
      <if test="customerid != null" >
        CUSTOMERID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="checktime != null" >
        #{checktime,jdbcType=DATE},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=DATE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        #{checker,jdbcType=VARCHAR},
      </if>
      <if test="starter != null" >
        #{starter,jdbcType=VARCHAR},
      </if>
      <if test="totalprice != null" >
        #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="supplierid != null" >
        #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  
  <select id="countByExample" parameterType="lj.elevator.erp.pojo.OrderExample" resultType="java.lang.Integer" >
  
  

    select count(*) from `order`
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update `order`
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        CREATETIME = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.checktime != null" >
        CHECKTIME = #{record.checktime,jdbcType=DATE},
      </if>
      <if test="record.starttime != null" >
        STARTTIME = #{record.starttime,jdbcType=DATE},
      </if>
      <if test="record.endtime != null" >
        ENDTIME = #{record.endtime,jdbcType=DATE},
      </if>
      <if test="record.type != null" >
        `TYPE` = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.creater != null" >
        CREATER = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.checker != null" >
        CHECKER = #{record.checker,jdbcType=VARCHAR},
      </if>
      <if test="record.starter != null" >
        STARTER = #{record.starter,jdbcType=VARCHAR},
      </if>
      <if test="record.totalprice != null" >
        TOTALPRICE = #{record.totalprice,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierid != null" >
        SUPPLIERID = #{record.supplierid,jdbcType=INTEGER},
      </if>
      <if test="record.customerid != null" >
        CUSTOMERID = #{record.customerid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update `order`
    set ID = #{record.id,jdbcType=INTEGER},
      CREATETIME = #{record.createtime,jdbcType=DATE},
      CHECKTIME = #{record.checktime,jdbcType=DATE},
      STARTTIME = #{record.starttime,jdbcType=DATE},
      ENDTIME = #{record.endtime,jdbcType=DATE},
      `TYPE` = #{record.type,jdbcType=CHAR},
      CREATER = #{record.creater,jdbcType=VARCHAR},
      CHECKER = #{record.checker,jdbcType=VARCHAR},
      STARTER = #{record.starter,jdbcType=VARCHAR},
      TOTALPRICE = #{record.totalprice,jdbcType=DECIMAL},
      STATE = #{record.state,jdbcType=VARCHAR},
      SUPPLIERID = #{record.supplierid,jdbcType=INTEGER},
      CUSTOMERID = #{record.customerid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="lj.elevator.erp.pojo.Order" >
    update `order`
    <set >
      <if test="createtime != null" >
        CREATETIME = #{createtime,jdbcType=DATE},
      </if>
      <if test="checktime != null" >
        CHECKTIME = #{checktime,jdbcType=DATE},
      </if>
      <if test="starttime != null" >
        STARTTIME = #{starttime,jdbcType=DATE},
      </if>
      <if test="endtime != null" >
        ENDTIME = #{endtime,jdbcType=DATE},
      </if>
      <if test="type != null" >
        `TYPE` = #{type,jdbcType=CHAR},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="checker != null" >
        CHECKER = #{checker,jdbcType=VARCHAR},
      </if>
      <if test="starter != null" >
        STARTER = #{starter,jdbcType=VARCHAR},
      </if>
      <if test="totalprice != null" >
        TOTALPRICE = #{totalprice,jdbcType=DECIMAL},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="supplierid != null" >
        SUPPLIERID = #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        CUSTOMERID = #{customerid,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="lj.elevator.erp.pojo.Order" >
    update `order`
    set CREATETIME = #{createtime,jdbcType=DATE},
      CHECKTIME = #{checktime,jdbcType=DATE},
      STARTTIME = #{starttime,jdbcType=DATE},
      ENDTIME = #{endtime,jdbcType=DATE},
      `TYPE` = #{type,jdbcType=CHAR},
      CREATER = #{creater,jdbcType=VARCHAR},
      CHECKER = #{checker,jdbcType=VARCHAR},
      STARTER = #{starter,jdbcType=VARCHAR},
      TOTALPRICE = #{totalprice,jdbcType=DECIMAL},
      STATE = #{state,jdbcType=VARCHAR},
      SUPPLIERID = #{supplierid,jdbcType=INTEGER},
      CUSTOMERID = #{customerid,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>